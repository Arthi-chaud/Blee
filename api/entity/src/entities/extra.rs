//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use super::sea_orm_active_enums::ExtraTypeEnum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "extra")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: Uuid,
	pub name: String,
	pub name_slug: String,
	pub thumbnail_id: Option<Uuid>,
	pub registered_at: Date,
	pub package_id: Uuid,
	pub artist_id: Uuid,
	pub file_id: Uuid,
	pub disc_index: Option<i32>,
	pub track_index: Option<i32>,
	pub r#type: Vec<ExtraTypeEnum>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::artist::Entity",
		from = "Column::ArtistId",
		to = "super::artist::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Artist,
	#[sea_orm(
		belongs_to = "super::file::Entity",
		from = "Column::FileId",
		to = "super::file::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	File,
	#[sea_orm(
		belongs_to = "super::image::Entity",
		from = "Column::ThumbnailId",
		to = "super::image::Column::Id",
		on_update = "NoAction",
		on_delete = "SetNull"
	)]
	Image,
	#[sea_orm(
		belongs_to = "super::package::Entity",
		from = "Column::PackageId",
		to = "super::package::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Package,
}

impl Related<super::artist::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Artist.def()
	}
}

impl Related<super::file::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::File.def()
	}
}

impl Related<super::image::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Image.def()
	}
}

impl Related<super::package::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Package.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
