//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "chapter_type_enum")]
pub enum ChapterTypeEnum {
	#[sea_orm(string_value = "interview")]
	Interview,
	#[sea_orm(string_value = "non_musical_interview")]
	NonMusicalInterview,
	#[sea_orm(string_value = "other")]
	Other,
	#[sea_orm(string_value = "performance")]
	Performance,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "extra_type_enum")]
pub enum ExtraTypeEnum {
	#[sea_orm(string_value = "alternate_view")]
	AlternateView,
	#[sea_orm(string_value = "backdrops")]
	Backdrops,
	#[sea_orm(string_value = "behind_the_scenes")]
	BehindTheScenes,
	#[sea_orm(string_value = "interview")]
	Interview,
	#[sea_orm(string_value = "music_video")]
	MusicVideo,
	#[sea_orm(string_value = "other")]
	Other,
	#[sea_orm(string_value = "performance")]
	Performance,
	#[sea_orm(string_value = "trailer")]
	Trailer,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "image_type_enum")]
pub enum ImageTypeEnum {
	#[sea_orm(string_value = "banner")]
	Banner,
	#[sea_orm(string_value = "poster")]
	Poster,
	#[sea_orm(string_value = "thumbnail")]
	Thumbnail,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "movie_type_enum")]
pub enum MovieTypeEnum {
	#[sea_orm(string_value = "concert")]
	Concert,
	#[sea_orm(string_value = "documentary")]
	Documentary,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "video_quality_enum")]
pub enum VideoQualityEnum {
	#[sea_orm(string_value = "1080p")]
	_1080p,
	#[sea_orm(string_value = "240p")]
	_240p,
	#[sea_orm(string_value = "2k")]
	_2k,
	#[sea_orm(string_value = "360p")]
	_360p,
	#[sea_orm(string_value = "480p")]
	_480p,
	#[sea_orm(string_value = "4k")]
	_4k,
	#[sea_orm(string_value = "720p")]
	_720p,
	#[sea_orm(string_value = "8k")]
	_8k,
	#[sea_orm(string_value = "Other")]
	Other,
}
