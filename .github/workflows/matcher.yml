name: "Matcher"
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

defaults:
  run:
    shell: bash
    working-directory: ./matcher

jobs:
  Changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      matcher: ${{ steps.filter.outputs.matcher }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            matcher:
              - 'matcher/**'
              - '.github/workflows/matcher.yml'
  Build:
    needs: changes
    if: ${{ needs.changes.outputs.matcher == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-matcher
      - name: Build
        run: stack build
  Format:
    if: ${{ needs.changes.outputs.matcher == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-matcher
      - uses: haskell-actions/run-fourmolu@v9
        with:
          version: "0.14.0.0"
          pattern: |
            matcher/src/**/*.hs
            matcher/app/*.hs
            matcher/test/**/*.hs
          follow-symbolic-links: false
  Lint:
    if: ${{ needs.changes.outputs.matcher == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-matcher
      - name: 'Set up HLint'
        uses: rwe/actions-hlint-setup@v1
        with:
          version: '3.5'
      - name: 'Run HLint'
        uses: rwe/actions-hlint-run@v2
        with:
          path: '["matcher/app/", "matcher/src/", "matcher/test/"]'
          fail-on: warning
  Tests:
    runs-on: ubuntu-latest
    needs: [ Build ]
    if: ${{ needs.changes.outputs.matcher == 'true' && always() }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-matcher
      - name: Install Coverage utility
        run: stack install hpc-codecov
      - name: Run unit tests
        run: stack test --coverage
      - name: Process Coverage report
        run: hpc-codecov stack:all -o codecov.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./matcher/codecov.json
          flags: matcher
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  Dockerize:
    if: ${{ needs.changes.outputs.matcher == 'true' && github.event_name == 'pull_request' }}
    needs: [ Build ]
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker
        uses: docker/build-push-action@v3
        with:
          context: ./matcher
          push: false
  Publish:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || (needs.changes.outputs.matcher == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            arthichaud/blee-matcher
            ghcr.io/${{ github.repository }}-matcher
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./matcher
          push: true
          tags: ${{ github.event_name == 'release' && steps.meta.outputs.tags || 'arthichaud/blee-matcher:edge' }}
          labels: ${{ steps.meta.outputs.labels }}