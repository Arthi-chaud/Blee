name: "Front"
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

defaults:
  run:
    shell: bash
    working-directory: ./front

jobs:
  Changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      front: ${{ steps.filter.outputs.front }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            front:
              - 'front/**'
              - '.github/workflows/front.yml'
  Build:
    needs: changes
    if: ${{ needs.changes.outputs.front == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/cache-front
      - name: Generate Source Code
        run: dart run build_runner build
      - name: Build Web Project
        run: flutter build web
  Format:
    if: ${{ needs.changes.outputs.front == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/cache-front
      - name: Check format
        run: dart format lib --set-exit-if-changed
  Lint:
    if: ${{ needs.changes.outputs.front == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: ./.github/actions/cache-front
      - name: Generate Source Code
        run: dart run build_runner build
      - name: Run analyzer
        run: flutter analyze
  Dockerize:
    if: ${{ needs.changes.outputs.front == 'true' && github.event_name == 'pull_request' }}
    needs: [ Build ]
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker
        uses: docker/build-push-action@v3
        with:
          context: ./front
          push: false
  Publish:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || (needs.changes.outputs.front == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            arthichaud/blee-front
            ghcr.io/${{ github.repository }}-front
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ./front
          push: true
          tags: ${{ github.event_name == 'release' && steps.meta.outputs.tags || 'arthichaud/blee-front:edge' }}
          labels: ${{ steps.meta.outputs.labels }}